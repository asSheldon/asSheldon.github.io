(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{468:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"解决权限问题的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决权限问题的思路"}},[t._v("#")]),t._v(" 解决权限问题的思路")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("ol",[a("li",[t._v("在登录界面，在登录成功时，会从后台获取到一个唯一的值，token用于表示用户获得了进入主界面的权限，这时，可以将获得的token值放到cookie或者sessionstorge中存储。")]),t._v(" "),a("li",[t._v("获得token的作用，只有获得了唯一值token后，用户才能继续访问其他API，要是没有token，用户就不能够访问其他API，从而做到权限的功能。")]),t._v(" "),a("li",[t._v("将token存入浏览器缓存中，可以在会话期间保持token，并且可以获得访问其他API的权限")])])]),t._v(" "),a("h3",{attrs:{id:"具体代码如下："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体代码如下："}},[t._v("#")]),t._v(" 具体代码如下：")]),t._v(" "),a("hr"),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("login")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    this."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$refs")]),t._v(".loginRef.validate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("async valid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("valid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n        // 解构获得的返回值data并重名为res\n        const "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" data: res "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await this."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http")]),t._v(".post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'login'")]),t._v(", this.loginForm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res.meta.status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" this."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$message")]),t._v(".error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录失败'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        this."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$message")]),t._v(".success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'登录成功'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        console.log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("session中\n        window.sessionStorage.setItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'token'")]),t._v(", res.data.token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        this."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$router")]),t._v(".push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("接下来要实现的就是在登录之后，用户获得访问其他API的权限，在请求API时，需要在请求头中添加token，才可以访问到服务器")])]),t._v(" "),a("h3",{attrs:{id:"在入口函数main-js中设置请求拦截器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在入口函数main-js中设置请求拦截器"}},[t._v("#")]),t._v(" 在入口函数main.js中设置请求拦截器")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" axios from "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'axios'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置请求的根路径")]),t._v("\naxios.defaults.baseURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:8888/api/private/v1/'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求拦截器,设置在登录之后的请求上加权限-》在Authorization字段中添加tokan")]),t._v("\naxios.interceptors.request.use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# console.log(config)")]),t._v("\n  config.headers.Authorization "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window.sessionStorage.getItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'token'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" config\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nVue.prototype."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("最后在路由中设置，如果浏览器缓存中存在token则不需要登录，直接进入主界面，当用户退出时，清空token，当浏览器缓存中没有token时，则用户需要重新登录。\n设置路由导航守卫就是为了防止在未登录的情况下访问其他页面，需要直接跳转到登录页面")])]),t._v(" "),a("h3",{attrs:{id:"在路由文件中设置路由导航守卫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在路由文件中设置路由导航守卫"}},[t._v("#")]),t._v(" 在路由文件中设置路由导航守卫")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 挂载路由导航守卫")]),t._v("\nrouter.beforeEach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("to, from, next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to 将要访问的路径")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# form 从哪个路径跳转而来")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# next是一个函数，表示放行")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# next() 放行 next(/login)强制跳转")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to.path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  const tokenStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window.sessionStorage.getItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'token'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("tokenStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/Login'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);